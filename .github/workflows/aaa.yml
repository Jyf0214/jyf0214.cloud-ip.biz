name: Debug with Upterm (SSH to Runner)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 设置Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          # 创建一个文件来记录要安装的系统包，用于缓存键
          cat <<APT_PKGS > apt-packages.txt
          build-essential
          ffmpeg
          libsndfile1
          libssl-dev
          zlib1g-dev
          curl
          wget
          APT_PKGS
          sudo apt-get install -y $(cat apt-packages.txt | tr '\n' ' ')
          echo "常用系统包已安装。"

      - name: 缓存系统包
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: 生成Python依赖文件
        run: |
          cat <<EOF > requirements.txt
          openai==0.27.8
          HTMLParser>=0.0.2
          PyQRCode==1.2.1
          qrcode==7.4.2
          requests>=2.28.2
          Pillow

          pydub>=0.25.1
          gTTS>=2.3.1
          pyttsx3>=2.90
          numpy<=1.24.2
          
          google-generativeai

          dingtalk_stream

          flask
          schedule
          cryptography>=39.0.0
          resend>=0.1.0
          huaweicloudsdkfunctiongraph>=3.0.0
          huaweicloudsdkcore>=3.0.0
          webdavclient3
          EOF
          echo "requirements.txt文件已生成。"

      - name: 缓存Python依赖
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: 安装Python依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip check

      - name: 克隆私有仓库
        env:
          PAT: ${{ secrets.YUNZAIBOT_PAT }}
        run: git clone https://x-access-token:${PAT}@github.com/Jyf0214/veiled-journeys.git


      - name: 启用Upterm调试
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true

      - name: 调试会话前示例命令
        run: echo "本命令执行后将启动Upterm会话，现在可以连接。"

      - name: 保持会话用于调试
        run: |
          echo "Upterm会话已激活。请通过注释或日志中提供的URL使用SSH连接。"
          echo "在您的SSH客户端中按Ctrl+C以断开连接并继续或完成。"
          sleep 1

      - name: 提交更改到veiled-journeys
        working-directory: veiled-journeys
        env:
          PAT: ${{ secrets.YUNZAIBOT_PAT }}
        run: |
          echo "开始提交veiled-journeys仓库的更改..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH_NAME="main"

          if git status --porcelain | grep -q .; then
            echo "veiled-journeys检测到更改。尝试提交并推送。"

            MAX_RETRIES=5
            RETRY_COUNT=0
            until git pull origin "$BRANCH_NAME" --rebase; do
              RETRY_COUNT=$((RETRY_COUNT+1))
              if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
                echo "错误：尝试$MAX_RETRIES次后未能拉取最新更改。中止提交。"
                exit 1
              fi
              echo "拉取失败。5秒后重试..."
              sleep 5
            done
            echo "成功拉取最新更改。"

            git add .
            git commit -m "GitHub Actions调试工作流自动提交" || echo "rebase后没有新的更改需要提交。"

            RETRY_COUNT=0
            until git push https://x-access-token:${PAT}@github.com/Jyf0214/veiled-journeys.git "$BRANCH_NAME"; do
              RETRY_COUNT=$((RETRY_COUNT+1))
              if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
                echo "错误：尝试$MAX_RETRIES次后未能推送更改。中止提交。"
                exit 1
              fi
              echo "推送失败。5秒后重试..."
              sleep 5
            done
            echo "更改已成功提交并推送到$BRANCH_NAME。"
          else
            echo "veiled-journeys未检测到更改。跳过提交。"
          fi