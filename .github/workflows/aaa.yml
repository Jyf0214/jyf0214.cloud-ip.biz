# 工作流名称
name: Incus CI with SSH and WebDAV Backup (Robust Networking)

# 触发条件
on:
  workflow_dispatch:

# 环境变量
env:
  CONTAINER_NAME: my-ci-container
  BACKUP_FILE: incus_backup.tar.gz
  WEBDAV_REMOTE: webdav_backup

jobs:
  build-and-debug:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1：安装 rclone 和 Incus
      - name: Install dependencies and Incus
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone
          # 安装 Incus
          sudo curl -fsSL https://pkgs.zabbly.com/key.asc | sudo gpg --dearmor -o /usr/share/keyrings/zabbly.gpg
          sudo sh -c "cat > /etc/apt/sources.list.d/zabbly-incus-stable.sources" <<EOF
          Enabled: yes
          Types: deb
          URIs: https://pkgs.zabbly.com/incus/stable
          Suites: $(. /etc/os-release && echo ${VERSION_CODENAME})
          Components: main
          Architectures: $(dpkg --print-architecture)
          Signed-By: /usr/share/keyrings/zabbly.gpg
          EOF
          sudo apt-get update
          sudo apt-get install -y incus

      # ********** 最终网络修复步骤 **********
      # 步骤 2：初始化 Incus 并配置网络 (NAT)
      - name: Initialize Incus and Configure Network
        run: |
          echo "Initializing Incus..."
          sudo incus admin init --auto
          
          echo "Enabling NAT for the default network. This grants full internet access to containers."
          # 为默认的 incusbr0 网络开启 IPv4 和 IPv6 的网络地址转换
          # 这是最稳定、最通用的网络解决方案
          sudo incus network set incusbr0 ipv4.nat=true
          sudo incus network set incusbr0 ipv6.nat=true

      # 步骤 3：配置 rclone
      - name: Configure rclone for WebDAV
        run: |
          mkdir -p ~/.config/rclone
          echo "[${WEBDAV_REMOTE}]
          type = webdav
          url = ${{ secrets.WEBDAV_URL }}
          vendor = other
          user = ${{ secrets.WEBDAV_USER }}
          pass = $(echo '${{ secrets.WEBDAV_PASS }}' | rclone obscure -)
          " > ~/.config/rclone/rclone.conf

      # 步骤 4：检查并恢复/创建容器
      - name: Check, Restore or Create Container
        run: |
          if [ -n "$(rclone lsf ${WEBDAV_REMOTE}:/ --include ${BACKUP_FILE})" ]; then
            echo "Backup found. Downloading and restoring..."
            rclone copy ${WEBDAV_REMOTE}:${BACKUP_FILE} .
            sudo incus import ${BACKUP_FILE} ${CONTAINER_NAME}
          else
            echo "No backup found. Launching new container..."
            sudo incus launch images:ubuntu/22.04 ${CONTAINER_NAME}
          fi
          # 启动容器并等待网络就绪
          sudo incus start ${CONTAINER_NAME}
          sleep 5 
          
          echo "Verifying container internet access..."
          # 执行 apt-get update 作为验证
          sudo incus exec ${CONTAINER_NAME} -- apt-get update

      # 步骤 5：启用 Upterm 调试会话
      - name: Enable Upterm debugging
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 348

      # --- SSH 会话结束后，工作流从这里继续 ---

      # 步骤 6：停止并备份容器
      - name: Stop and Backup Container
        run: |
          echo "Stopping container..."
          sudo incus stop ${CONTAINER_NAME}
          echo "Exporting container..."
          sudo incus export ${CONTAINER_NAME} ${BACKUP_FILE} --force
          echo "Uploading new backup to WebDAV..."
          rclone copyto ${BACKUP_FILE} ${WEBDAV_REMOTE}:${BACKUP_FILE}
          echo "Backup complete."