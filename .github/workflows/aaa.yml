# 工作流名称
name: Incus CI with SSH and WebDAV Backup (Official Action)

# 触发条件
on:
  workflow_dispatch:

# 环境变量
env:
  CONTAINER_NAME: my-ci-container
  BACKUP_FILE: lxd_backup.tar.gz # LXD 默认可能使用 .tar.gz
  WEBDAV_REMOTE: webdav_backup

jobs:
  build-and-debug:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1：使用官方 Action 安装并配置好一个网络通畅的 LXD
      # 这是最关键的一步，它解决了我们之前遇到的所有网络问题。
      - name: Setup LXD with proper networking
        uses: canonical/setup-lxd@v1.1.0 # 推荐固定版本以保证稳定性

      # 步骤 2：安装 rclone
      - name: Install rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      # 步骤 3：配置 rclone
      - name: Configure rclone for WebDAV
        run: |
          mkdir -p ~/.config/rclone
          echo "[${WEBDAV_REMOTE}]
          type = webdav
          url = ${{ secrets.WEBDAV_URL }}
          vendor = other
          user = ${{ secrets.WEBDAV_USER }}
          pass = $(echo '${{ secrets.WEBDAV_PASS }}' | rclone obscure -)
          " > ~/.config/rclone/rclone.conf

      # 步骤 4：检查并恢复/创建容器
      # 注意：现在所有 lxc 命令都需要以 `lxc` 而不是 `incus` 执行
      - name: Check, Restore or Create Container
        run: |
          if [ -n "$(rclone lsf ${WEBDAV_REMOTE}:/ --include ${BACKUP_FILE})" ]; then
            echo "Backup found. Downloading and restoring..."
            rclone copy ${WEBDAV_REMOTE}:${BACKUP_FILE} .
            # lxd import 会创建一个已停止的容器
            lxd import ${BACKUP_FILE}
            # 'import' 命令默认使用备份文件中的原始容器名
            # 为了保险起见，我们先获取原始名称再启动
            ORIGINAL_NAME=$(tar -xOf ${BACKUP_FILE} backup/index.yaml | grep 'name:' | awk '{print $2}')
            lxc start ${ORIGINAL_NAME}
            # 如果需要，可以重命名为标准名称
            lxc rename ${ORIGINAL_NAME} ${CONTAINER_NAME}
          else
            echo "No backup found. Launching new container..."
            # `lxc launch` 默认使用官方配置好的网络，直接就能联网
            lxc launch ubuntu:22.04 ${CONTAINER_NAME}
          fi
          
          echo "Waiting for container to settle..."
          sleep 10
          
          echo "Verifying container internet access..."
          # `lxc exec` 同样不需要 sudo
          lxc exec ${CONTAINER_NAME} -- apt-get update

      # 步骤 5：启用 Upterm 调试会话
      - name: Enable Upterm debugging
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 348

      # --- SSH 会话结束后，工作流从这里继续 ---

      # 步骤 6：停止并备份容器
      - name: Stop and Backup Container
        run: |
          echo "Stopping container..."
          lxc stop ${CONTAINER_NAME} --force
          echo "Exporting container..."
          lxc export ${CONTAINER_NAME} ${BACKUP_FILE} --force
          echo "Uploading new backup to WebDAV..."
          rclone copyto ${BACKUP_FILE} ${WEBDAV_REMOTE}:${BACKUP_FILE}
          echo "Backup complete."