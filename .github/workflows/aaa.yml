name: CI with Persistent Chroot Environment (Final Version)

on:
  workflow_dispatch:

env:
  CHROOT_DIR: /mnt/minisys
  BACKUP_FILE: minisys_backup.tar.gz
  WEBDAV_REMOTE_PATH: "backup"

jobs:
  build-and-debug:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 最大化运行器磁盘空间
        run: |
          echo "清理前，初始磁盘空间："
          df -h /
          echo "开始清理预装软件以释放空间..."
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"
          echo "✅ 清理完成，当前可用空间："
          df -h /

      - name: 2. 安装所需依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap rclone

      - name: 3. 恢复备份或创建新系统
        env:
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
        run: |
          echo "正在配置 rclone..."
          rclone config create webdav webdav url="${WEBDAV_URL}" vendor=other user="${WEBDAV_USER}" pass="${WEBDAV_PASS}"
          echo "正在检查 WebDAV 上是否存在备份..."
          if rclone lsf webdav:${WEBDAV_REMOTE_PATH}/${BACKUP_FILE} > /dev/null; then
            echo "✅ 发现备份。正在从云端流式恢复系统..."
            sudo mkdir -p ${{ env.CHROOT_DIR }}
            rclone cat webdav:${WEBDAV_REMOTE_PATH}/${BACKUP_FILE} | sudo tar -xzpf - -C ${{ env.CHROOT_DIR }}
          else
            echo "ℹ️ 未发现备份。将创建新系统..."
            sudo mkdir -p ${{ env.CHROOT_DIR }}
            sudo debootstrap --variant=minbase jammy ${{ env.CHROOT_DIR }} http://archive.ubuntu.com/ubuntu/
          fi
          echo "✅ 系统准备就绪。当前磁盘空间："
          df -h /

      - name: 4. 挂载虚拟文件系统到 Chroot 环境
        run: |
          echo "为了让 chroot 环境内的程序能正常工作，正在挂载虚拟文件系统..."
          MNT_DIR=${{ env.CHROOT_DIR }}
          sudo mount -t proc proc "${MNT_DIR}/proc"
          sudo mount -o bind /dev "${MNT_DIR}/dev"
          sudo mount -o bind /dev/pts "${MNT_DIR}/dev/pts"
          sudo mount -o bind /sys "${MNT_DIR}/sys"
          echo "✅ 所有必要的虚拟文件系统已挂载。"

      - name: 5. 启用 Upterm 调试会话 (用户操作区)
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 348

      - name: 6. 卸载 Chroot 环境的虚拟文件系统 (关键步骤)
        # 使用 if: always() 确保此步骤总是运行，即使用户会话失败或被取消
        # 这是为了保证 chroot 目录在备份前一定是“干净”的
        if: always()
        run: |
          echo "会话结束。为了安全备份，正在卸载所有虚拟文件系统..."
          MNT_DIR=${{ env.CHROOT_DIR }}
          # 使用 -l (lazy) 选项可以增加卸载的成功率，以防万一有进程仍在占用
          sudo umount -l "${MNT_DIR}/dev/pts"
          sudo umount -l "${MNT_DIR}/dev"
          sudo umount -l "${MNT_DIR}/proc"
          sudo umount -l "${MNT_DIR}/sys"
          echo "✅ 虚拟文件系统已全部卸载。"

      - name: 7. 备份系统环境到 WebDAV
        # 仅当工作流不是因为被取消才运行此步骤
        if: ${{ !cancelled() }}
        env:
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
        run: |
          echo "开始流式打包并上传备份..."
          rclone config create webdav webdav url="${WEBDAV_URL}" vendor=other user="${WEBDAV_USER}" pass="${WEBDAV_PASS}"
          sudo tar -czpf - -C ${{ env.CHROOT_DIR }} . | rclone rcat webdav:${WEBDAV_REMOTE_PATH}/${BACKUP_FILE} --progress
          echo "✅ 备份流程执行完毕。"