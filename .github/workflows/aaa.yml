# 工作流名称
name: LXD/Incus CI with SSH and WebDAV Backup

# 触发条件：允许手动从 Actions 标签页触发
on:
  workflow_dispatch:

# 定义工作流中使用的环境变量，方便修改
env:
  # Incus/LXD 容器的名称
  CONTAINER_NAME: my-ci-container
  # 备份文件的名称
  BACKUP_FILE: incus_backup.tar.gz
  # WebDAV 远程仓库的名称 (rclone 配置名)
  WEBDAV_REMOTE: webdav_backup

jobs:
  build-and-debug:
    # 使用最新的 Ubuntu 运行环境
    runs-on: ubuntu-latest

    steps:
      # 步骤 1：安装 rclone 用于与 WebDAV 通信
      - name: Install rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      # 步骤 2：安装并初始化 Incus (LXD 的现代后继者)
      # Incus 的命令与 LXD 几乎完全相同，并且安装更稳定
      - name: Install and initialize Incus
        run: |
          sudo curl -fsSL https://pkgs.zabbly.com/key.asc | sudo gpg --dearmor -o /usr/share/keyrings/zabbly.gpg
          sudo sh -c "cat > /etc/apt/sources.list.d/zabbly-incus-stable.sources" <<EOF
          Enabled: yes
          Types: deb
          URIs: https://pkgs.zabbly.com/incus/stable
          Suites: $(. /etc/os-release && echo ${VERSION_CODENAME})
          Components: main
          Architectures: $(dpkg --print-architecture)
          Signed-By: /usr/share/keyrings/zabbly.gpg
          EOF
          sudo apt-get update
          sudo apt-get install -y incus
          # 自动初始化 Incus，无需交互
          sudo incus admin init --auto
          # 将当前用户添加到 incus-admin 组，避免后续命令都加 sudo
          sudo usermod -a -G incus-admin $USER
          newgrp incus-admin

      # 步骤 3：配置 rclone 以连接到 WebDAV
      # 使用 GitHub Secrets 安全地创建配置文件
      - name: Configure rclone for WebDAV
        run: |
          mkdir -p ~/.config/rclone
          echo "[${WEBDAV_REMOTE}]
          type = webdav
          url = ${{ secrets.WEBDAV_URL }}
          vendor = other
          user = ${{ secrets.WEBDAV_USER }}
          pass = $(echo '${{ secrets.WEBDAV_PASS }}' | rclone obscure -)
          " > ~/.config/rclone/rclone.conf

      # 步骤 4：检查 WebDAV 上是否存在备份
      # 使用 rclone lsf 命令，如果文件存在，则返回文件名，否则返回空
      - name: Check for existing backup on WebDAV
        id: check_backup
        run: |
          # 如果文件存在，命令会成功并输出文件名；如果不存在，会失败但我们忽略错误
          # 并通过检查输出的长度来判断文件是否存在
          if [ -n "$(rclone lsf ${WEBDAV_REMOTE}:/ --include ${BACKUP_FILE})" ]; then
            echo "Backup found."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "No backup found."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # 步骤 5：如果备份存在，则下载并恢复容器
      - name: Download and restore from backup
        if: steps.check_backup.outputs.exists == 'true'
        run: |
          echo "Downloading backup from WebDAV..."
          rclone copy ${WEBDAV_REMOTE}:${BACKUP_FILE} .
          echo "Importing container from backup..."
          incus import ${BACKUP_FILE} ${CONTAINER_NAME}
          incus start ${CONTAINER_NAME}

      # 步骤 6：如果备份不存在，则创建新容器
      - name: Create and setup new container
        if: steps.check_backup.outputs.exists == 'false'
        run: |
          echo "Launching a new Ubuntu container..."
          incus launch images:ubuntu/22.04 ${CONTAINER_NAME}
          echo "Waiting for container to get network..."
          sleep 10
          echo "Performing initial setup..."
          # --- 在这里添加您的初始化命令 ---
          # 例如：安装您需要的软件
          # incus exec ${CONTAINER_NAME} -- apt-get update
          # incus exec ${CONTAINER_NAME} -- apt-get install -y build-essential git
          # ------------------------------------
          echo "Container setup complete."

      # 步骤 7：启用 Upterm 调试会话 (您的 SSH 任务占用时间)
      # 工作流将在此暂停，直到 SSH 连接断开或超时
      - name: Enable Upterm debugging
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 300

      # --- SSH 会话结束后，工作流从这里继续 ---

      # 步骤 8：停止容器以确保数据一致性
      - name: Stop container before backup
        run: |
          echo "Stopping container to ensure a consistent state for backup..."
          incus stop ${CONTAINER_NAME}

      # 步骤 9：导出容器的当前状态为备份文件
      - name: Export container to backup file
        run: |
          echo "Exporting container state..."
          # 使用 --force 覆盖本地可能存在的旧备份文件
          incus export ${CONTAINER_NAME} ${BACKUP_FILE} --force

      # 步骤 10：将新的备份文件上传到 WebDAV
      - name: Upload new backup to WebDAV
        run: |
          echo "Uploading new backup to WebDAV..."
          # 使用 copyto 会覆盖目标文件
          rclone copyto ${BACKUP_FILE} ${WEBDAV_REMOTE}:${BACKUP_FILE}
          echo "Backup complete."