# 工作流名称
name: Run OpenList and Veiled Journeys Downloader (Encrypted)

# 工作流触发器：手动触发 (workflow_dispatch)
on:
  workflow_dispatch:

# 全局环境变量
env:
  # 注意：使用了 GitCode 的 PAT，因为加密仓库通常存放在这里
  GITCODE_TOKEN: ${{ secrets.GITCODE_TOKEN }} 

# 作业定义
jobs:
  build-and-run:
    # 运行环境
    runs-on: ubuntu-latest

    # 作业步骤
    steps:
      - name: 1. 安装 Python 基础依赖 (Install Base Dependencies)
        run: |
          echo "正在安装基础 Python 包..."
          sudo apt-get update
          pip install --upgrade pip
          # 注意：这里只安装运行解密和克隆脚本本身所需的最少依赖
          # 仓库内的具体依赖将通过 requirements.txt 安装
          pip install requests tqdm py7zr webdavclient3 raffle upstash-redis
          echo "✅ 基础依赖安装完毕。"

      # --- 加密流程开始 ---

      - name: 2. 克隆加密的 veiled-journeys 仓库 (Clone Encrypted Repository)
        run: |
          echo "正在从 GitCode 克隆加密仓库..."
          git clone https://Jyf0214:${GITCODE_TOKEN}@gitcode.com/Jyf0214/veiled-journeys.git
          echo "✅ 仓库克隆完毕。"

      - name: 3. 安装仓库特定的 Python 依赖 (Install Repo-specific Requirements)
        # 此步骤运行在克隆下来的仓库目录中
        working-directory: ./veiled-journeys
        run: |
          echo "正在安装 requirements.txt 中定义的依赖..."
          pip install -r requirements.txt
          echo "✅ 仓库依赖安装完毕。"

      - name: 4. 启动会话 - 解密脚本 (Start Session - Decrypt Scripts)
        # 此步骤同样在仓库目录中运行
        working-directory: ./veiled-journeys
        env:
          # 需要在仓库的 Secrets 中配置 Jyf0214_PASSWORD
          Jyf0214_PASSWORD: ${{ secrets.Jyf0214_PASSWORD }}
        run: |
          echo "正在运行解密程序..."
          python main.py start
          echo "✅ 脚本已解密到临时目录。"

      - name: 5. 运行 Kemono 下载器 (Run Kemono Downloader)
        run: |
          echo "正在运行 Kemono 下载器..."
          # 注意：调用的是解密后路径下的脚本
          python veiled-journeys/Jyf0214/kemono_downloader.py
          echo "✅ Kemono 下载器执行完毕。"

      - name: 6. 清理会话 - 移除解密后的文件 (Cleanup Session - Remove Decrypted Files)
        # 使用 if: always() 确保此步骤无论之前是否成功都会执行
        if: always()
        working-directory: ./veiled-journeys
        run: |
          echo "正在执行清理程序，移除明文脚本..."
          python main.py cleanup
          echo "✅ 清理完成。"

      # --- 加密流程结束 ---