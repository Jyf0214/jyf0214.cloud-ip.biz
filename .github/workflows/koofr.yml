# GitHub Action Workflow to run MAA-CLI (Final Complete Version with ADB Key Auth)
name: MAA Runner

on:
  workflow_dispatch:
    inputs:
      maa_command_2:
        description: 'The MAA command to run (e.g., "roguelike Mizuki")'
        required: true
        default: 'roguelike Mizuki'

jobs:
  run-maa:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Install Dependencies (Rust, Rclone, ADB)
        # 安装编译、同步和ADB连接所需的所有工具
        run: |
          sudo apt-get update
          sudo apt-get install -y rustc cargo rclone android-tools-adb

      - name: 3. Compile MAA-CLI from Source
        # 从源码编译maa-cli，并将其路径添加到环境中
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          cargo install --git https://github.com/MaaAssistantArknights/maa-cli.git --bin maa --tag stable --locked

      - name: 4. Configure Rclone for Backblaze B2
        # 使用Secrets创建rclone的配置文件，用于连接B2
        run: |
          mkdir -p ~/.config/rclone
          echo "[b2]
          type = b2
          account = ${{ secrets.B2_KEY_ID_2 }}
          key = ${{ secrets.B2_APPLICATION_KEY_2 }}
          download_url = ${{ secrets.B2_DOWNLOAD_URL_2 }}" > ~/.config/rclone/rclone.conf

      - name: 5. Download MAA Configs from B2
        # 从B2下载您的maa配置文件
        run: |
          mkdir -p ~/.config/maa
          rclone sync b2:${{ secrets.B2_BUCKET_NAME_2 }}/maa-configs ~/.config/maa || true

      - name: 6. Restore ADB Keys for Authentication
        # 核心步骤：将您手机信任的ADB密钥写入Runner环境，以跳过手动授权
        run: |
          mkdir -p ~/.android
          echo "${{ secrets.ADB_PRIVATE_KEY_2 }}" > ~/.android/adbkey
          echo "${{ secrets.ADB_PUBLIC_KEY_2 }}" > ~/.android/adbkey.pub
          # 设置私钥的正确权限，这是必需的
          chmod 600 ~/.android/adbkey

      - name: 7. Connect to Android Device
        # 使用密钥进行连接，并用 adb devices 验证连接状态
        env:
          ADDRESS_SECRET_2: ${{ secrets.ADDRESS_SECRET_2 }}
          PORT_SECRET_2: ${{ secrets.PORT_SECRET_2 }}
        run: |
          adb connect ${{ secrets.ADDRESS_SECRET_2 }}:${{ secrets.PORT_SECRET_2 }}
          sleep 2 # 等待连接稳定
          adb devices

      - name: 8. Install MAA Core and Resources
        # 运行 maa install 来下载核心文件
        env:
          B2_DOWNLOAD_URL: ${{ secrets.B2_DOWNLOAD_URL_2 }}
        run: maa install

      - name: 9. Run the MAA Task
        # 运行您手动触发时指定的主要任务
        env:
          ADDRESS_SECRET_2: ${{ secrets.ADDRESS_SECRET_2 }}
          PORT_SECRET_2: ${{ secrets.PORT_SECRET_2 }}
        run: maa ${{ github.event.inputs.maa_command_2 }} --verbose

      - name: 10. Upload Configs back to B2
        # 任务结束后，将更新后的配置同步回B2，以便下次使用
        if: always()
        run: |
          echo "MAA config directory is: ~/.config/maa"
          echo "Syncing configs back to B2..."
          rclone sync ~/.config/maa b2:${{ secrets.B2_BUCKET_NAME_2 }}/maa-configs