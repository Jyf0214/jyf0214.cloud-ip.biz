name: Koofr WebDAV Speed Test

on:
  workflow_dispatch:  # 手动触发测试

jobs:
  speed-test:
    runs-on: ubuntu-latest
    env:
      TEST_FILE: "test1gb.bin"  # 测试文件名
      RCLONE_CONFIG: /tmp/rclone.conf  # rclone 配置文件路径

    steps:
    - name: 安装 rclone ⚙️
      run: |
        curl https://rclone.org/install.sh | sudo bash
        rclone version

    - name: 配置 rclone 🔑
      run: |
        # 注意：这里不再包含 "pass" 字段
        cat > $RCLONE_CONFIG <<EOF
        [koofr]
        type = webdav
        url = https://app.koofr.net/dav/Koofr/
        vendor = other
        user = ${{ secrets.WEBDAVK_USER }}

        [gdrive]
        type = webdav
        url = https://app.koofr.net/dav/GDrive/
        vendor = other
        user = ${{ secrets.WEBDAVK_USER }}
        EOF
        
        chmod 600 $RCLONE_CONFIG
        echo "Rclone 配置完成！"
        # 为了验证，我们仍然需要提供密码来列出远程
        echo "列出远程 (需要密码):"
        RCLONE_CONFIG_KOOFR_PASS=${{ secrets.WEBDAVK_PASS }} RCLONE_CONFIG_GDRIVE_PASS=${{ secrets.WEBDAVK_PASS }} rclone listremotes --config $RCLONE_CONFIG

    - name: 生成 1GB 测试文件 ⚙️
      run: |
        dd if=/dev/urandom of=$TEST_FILE bs=1M count=1024
        ls -lh $TEST_FILE

    - name: 测试 Koofr 目录 ⬆️⬇️
      id: test_koofr
      # 通过 env 将密码作为环境变量传递给 rclone
      env:
        RCLONE_CONFIG_KOOFR_PASS: ${{ secrets.WEBDAVK_PASS }}
      run: |
        # 上传测试
        echo "🔄 开始上传到 Koofr 目录..."
        start_time=$(date +%s.%N)
        rclone copy $TEST_FILE koofr: --config $RCLONE_CONFIG -v
        end_time=$(date +%s.%N)
        
        upload_time=$(echo "$end_time - $start_time" | bc)
        upload_speed=$(echo "scale=2; 1024 / $upload_time" | bc)
        echo "📤 Koofr 上传速度: $upload_speed MB/s"
        echo "koofr_upload_speed=$upload_speed" >> $GITHUB_OUTPUT
        
        # 下载测试
        echo "🔄 开始从 Koofr 目录下载..."
        start_time=$(date +%s.%N)
        rclone copy koofr:$TEST_FILE ./downloaded_koofr.bin --config $RCLONE_CONFIG -v
        end_time=$(date +%s.%N)
        
        download_time=$(echo "$end_time - $start_time" | bc)
        download_speed=$(echo "scale=2; 1024 / $download_time" | bc)
        echo "📥 Koofr 下载速度: $download_speed MB/s"
        echo "koofr_download_speed=$download_speed" >> $GITHUB_OUTPUT
        
        # 清理
        rclone delete koofr:$TEST_FILE --config $RCLONE_CONFIG -v
        rm -f downloaded_koofr.bin

    - name: 测试 GDrive 目录 ⬆️⬇️
      id: test_gdrive
      # 通过 env 将密码作为环境变量传递给 rclone
      env:
        RCLONE_CONFIG_GDRIVE_PASS: ${{ secrets.WEBDAVK_PASS }}
      run: |
        # 上传测试
        echo "🔄 开始上传到 GDrive 目录..."
        start_time=$(date +%s.%N)
        rclone copy $TEST_FILE gdrive: --config $RCLONE_CONFIG -v
        end_time=$(date +%s.%N)
        
        upload_time=$(echo "$end_time - $start_time" | bc)
        upload_speed=$(echo "scale=2; 1024 / $upload_time" | bc)
        echo "📤 GDrive 上传速度: $upload_speed MB/s"
        echo "gdrive_upload_speed=$upload_speed" >> $GITHUB_OUTPUT
        
        # 下载测试
        echo "🔄 开始从 GDrive 目录下载..."
        start_time=$(date +%s.%N)
        rclone copy gdrive:$TEST_FILE ./downloaded_gdrive.bin --config $RCLONE_CONFIG -v
        end_time=$(date +%s.%N)
        
        download_time=$(echo "$end_time - $start_time" | bc)
        download_speed=$(echo "scale=2; 1024 / $download_time" | bc)
        echo "📥 GDrive 下载速度: $download_speed MB/s"
        echo "gdrive_download_speed=$download_speed" >> $GITHUB_OUTPUT
        
        # 清理
        rclone delete gdrive:$TEST_FILE --config $RCLONE_CONFIG -v
        rm -f downloaded_gdrive.bin

    - name: 清理测试文件 🧹
      run: |
        rm -f $TEST_FILE

    - name: 显示测试结果 📊
      run: |
        echo "--------------------------------"
        echo "🔥 Koofr WebDAV 测速结果"
        echo "--------------------------------"
        echo "📂 Koofr 目录 (https://app.koofr.net/dav/Koofr/)"
        echo "📤 上传速度: ${{ steps.test_koofr.outputs.koofr_upload_speed }} MB/s"
        echo "📥 下载速度: ${{ steps.test_koofr.outputs.koofr_download_speed }} MB/s"
        echo ""
        echo "📂 GDrive 目录 (https://app.koofr.net/dav/GDrive/)"
        echo "📤 上传速度: ${{ steps.test_gdrive.outputs.gdrive_upload_speed }} MB/s"
        echo "📥 下载速度: ${{ steps.test_gdrive.outputs.gdrive_download_speed }} MB/s"
        echo "--------------------------------"