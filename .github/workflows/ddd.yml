name: Setup and Run Yunzai Bot

on:
  schedule:
    - cron: '0 6 * * 6'  # 周六
    - cron: '0 6 * * 0'  # 周日
    - cron: '0 6 * * 5'  # 周五
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        run: |
          sudo apt update
          sudo apt install -y apt-transport-https curl ca-certificates software-properties-common
          curl -sL <url id="cupjam66s4t83n5a4400" type="url" status="failed" title="" wc="0">https://deb.nodesource.com/setup_16.x</url> | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v

      - name: Install Redis
        run: |
          sudo apt install -y redis-server
          sudo systemctl status redis-server

      - name: Install Git
        run: |
          sudo apt-get install -y git
          git --version

      - name: Install pm2
        run: |
          sudo npm install -g pm2

      - name: Clone Yunzai-Bot repository
        env:
          PAT: ${{ secrets.YUNZAIBOT_PAT }}
        run: |
          git clone https://x-access-token:${PAT}@github.com/Jyf0214/yunzai.git || true
          cd yunzai/ || true
          npm install -g pnpm || true
          git clone <url id="cupjam66s4t83n5a440g" type="url" status="parsed" title="GitHub - erzaozi/neko-status-plugin: 基于 Yunzai 的系统状态插件喵~" wc="7164">https://github.com/erzaozi/neko-status-plugin.git</url> ./plugins/neko-status-plugin || true
          pnpm install --filter=neko-status-plugin --no-frozen-lockfile || true
          git clone <url id="cupjam66s4t83n5a4410" type="url" status="parsed" title="GitHub - CikeyQi/nsfwjs-plugin: 基于 Yunzai 的涩图监听插件，使用 NSFWJS 模型" wc="2883">https://github.com/CikeyQi/nsfwjs-plugin.git</url> ./plugins/nsfwjs-plugin || true
          pnpm install --filter=nsfwjs-plugin --no-frozen-lockfile || true
          git clone <url id="cupjam66s4t83n5a441g" type="url" status="parsed" title="GitHub - AIGC-Yunzai/siliconflow-plugin: 基于 Yunzai 的 AIGC 插件，可免费使用 FLUX、SD、MJ 等绘图、LLM 推理、谷歌实时搜索 LLM、Vits 语音合成等功能。支持多模型接入、多 Key 负载均衡、图生图、直链获取、Markdown 图片输出等特性" wc="5977">https://github.com/AIGC-Yunzai/siliconflow-plugin.git</url> ./plugins/siliconflow-plugin || true
          pnpm install --filter=siliconflow-plugin --no-frozen-lockfile || true
          git clone <url id="cupjam66s4t83n5a4420" type="url" status="parsed" title="饺子/help-plugin" wc="2465">https://gitee.com/tu-zhengxiong0925/help-plugin.git</url> ./plugins/help-plugin || true
          sudo apt-get install -y fonts-wqy-zenhei || true
          sudo apt-get install -y fontconfig || true
          fc-cache -fv || true

      - name: Install dependencies
        run: |
          cd yunzai/ || true
          pnpm install -P || true

      - name: Start Yunzai Bot with pm2
        run: |
          cd yunzai/ || true
          pm2 start app.js --name yunzai-bot || true

      - name: Sleep for 5 hours and 45 minutes
        run: |
          sleep 21000

      - name: Continue to next step
        run: |
          echo "监听结束，执行下一步"
          cd yunzai/ || true
          git config --global user.name "Jyf0214" || true
          git config --global user.email "169313142+Jyf0214@users.noreply.github.com" || true
          git add . || true
          git commit -m "Initial commit" || true
          git push || true

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pm2 globally
        run: npm install -g pm2

      - name: Clone private repository
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://x-access-token:${PAT}@github.com/Jyf0214/chatgpt-on-wechat.git || true

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          cd chatgpt-on-wechat || true
          pip install -r requirements.txt || true
          pip install -r requirements-optional.txt || true

      - name: Start application with pm2
        run: |
          cd chatgpt-on-wechat || true
          pm2 start "python3 app.py" --name "my-python-app" || true


      - name: Run shell script
        run: sleep 21000
